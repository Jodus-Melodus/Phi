{
    "kind": "program",
    "body": [
        {
            "kind": "variableDeclarationExpression",
            "datatype": "int",
            "identifier": "x",
            "value": {
                "kind": "integerLiteral",
                "value": 0
            },
            "constant": "False"
        },
        {
            "kind": "variableDeclarationExpression",
            "datatype": "object",
            "identifier": "a",
            "value": {
                "kind": "objectLiteral",
                "properties": [
                    {
                        "kind": "propertyLiteral",
                        "key": "f",
                        "value": {
                            "kind": "integerLiteral",
                            "value": 3
                        }
                    },
                    {
                        "kind": "propertyLiteral",
                        "key": "e",
                        "value": {
                            "kind": "integerLiteral",
                            "value": 9
                        }
                    }
                ]
            },
            "constant": "False"
        },
        {
            "kind": "tryStatement",
            "tryBody": [
                {
                    "kind": "assignmentExpression",
                    "assigne": {
                        "kind": "identifier",
                        "symbol": "x"
                    },
                    "value": {
                        "kind": "memberExpression",
                        "object": {
                            "kind": "identifier",
                            "symbol": "a"
                        },
                        "property": {
                            "kind": "identifier",
                            "symbol": "t"
                        }
                    }
                }
            ],
            "exception": {
                "kind": "identifier",
                "symbol": "syntaxError"
            },
            "exceptBody": [
                {
                    "kind": "callExpression",
                    "arguments": [
                        {
                            "kind": "stringLiteral",
                            "value": "oh no"
                        }
                    ],
                    "caller": {
                        "kind": "identifier",
                        "symbol": "output"
                    }
                }
            ]
        },
        {
            "kind": "callExpression",
            "arguments": [
                {
                    "kind": "identifier",
                    "symbol": "x"
                }
            ],
            "caller": {
                "kind": "identifier",
                "symbol": "output"
            }
        }
    ]
}