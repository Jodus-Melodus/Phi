{
    "kind": "program",
    "body": [
        {
            "kind": "functionDeclaration",
            "name": "genFactors",
            "parameters": [
                {
                    "kind": "identifier",
                    "symbol": "n"
                }
            ],
            "body": [
                {
                    "kind": "variableDeclarationExpression",
                    "datatype": "array",
                    "identifier": "factors",
                    "value": {
                        "kind": "arrayLiteral",
                        "items": []
                    },
                    "constant": "False"
                },
                {
                    "kind": "variableDeclarationExpression",
                    "datatype": "int",
                    "identifier": "i",
                    "value": {
                        "kind": "integerLiteral",
                        "value": 1
                    },
                    "constant": "False"
                },
                {
                    "kind": "whileStatement",
                    "conditionLeft": {
                        "kind": "identifier",
                        "symbol": "i"
                    },
                    "operand": "<=",
                    "conditionRight": {
                        "kind": "identifier",
                        "symbol": "n"
                    },
                    "body": [
                        {
                            "kind": "ifStatement",
                            "conditionLeft": {
                                "kind": "binaryExpression",
                                "left": {
                                    "kind": "identifier",
                                    "symbol": "n"
                                },
                                "operand": "%",
                                "right": {
                                    "kind": "identifier",
                                    "symbol": "i"
                                }
                            },
                            "operand": "==",
                            "conditionRight": {
                                "kind": "integerLiteral",
                                "value": 0
                            },
                            "body": [
                                {
                                    "kind": "callExpression",
                                    "arguments": [
                                        {
                                            "kind": "identifier",
                                            "symbol": "i"
                                        }
                                    ],
                                    "caller": {
                                        "kind": "memberExpression",
                                        "object": {
                                            "kind": "identifier",
                                            "symbol": "factors"
                                        },
                                        "property": {
                                            "kind": "identifier",
                                            "symbol": "append"
                                        }
                                    }
                                }
                            ],
                            "elsebody": []
                        },
                        {
                            "kind": "assignmentBinaryExpression",
                            "assigne": {
                                "kind": "identifier",
                                "symbol": "i"
                            },
                            "operand": "+=",
                            "value": {
                                "kind": "integerLiteral",
                                "value": 1
                            }
                        }
                    ],
                    "elsebody": []
                },
                {
                    "kind": "returnExpression",
                    "value": {
                        "kind": "identifier",
                        "symbol": "factors"
                    }
                }
            ]
        },
        {
            "kind": "functionDeclaration",
            "name": "checkPrime",
            "parameters": [
                {
                    "kind": "identifier",
                    "symbol": "n"
                }
            ],
            "body": [
                {
                    "kind": "variableDeclarationExpression",
                    "datatype": "array",
                    "identifier": "factors",
                    "value": {
                        "kind": "callExpression",
                        "arguments": [
                            {
                                "kind": "identifier",
                                "symbol": "n"
                            }
                        ],
                        "caller": {
                            "kind": "identifier",
                            "symbol": "genFactors"
                        }
                    },
                    "constant": "False"
                },
                {
                    "kind": "returnExpression",
                    "value": {
                        "kind": "ifStatement",
                        "conditionLeft": {
                            "kind": "callExpression",
                            "arguments": [],
                            "caller": {
                                "kind": "memberExpression",
                                "object": {
                                    "kind": "identifier",
                                    "symbol": "factors"
                                },
                                "property": {
                                    "kind": "identifier",
                                    "symbol": "length"
                                }
                            }
                        },
                        "operand": "==",
                        "conditionRight": {
                            "kind": "integerLiteral",
                            "value": 2
                        },
                        "body": [
                            {
                                "kind": "returnExpression",
                                "value": {
                                    "kind": "identifier",
                                    "symbol": "T"
                                }
                            }
                        ],
                        "elsebody": [
                            {
                                "kind": "returnExpression",
                                "value": {
                                    "kind": "identifier",
                                    "symbol": "F"
                                }
                            }
                        ]
                    }
                }
            ]
        },
        {
            "kind": "variableDeclarationExpression",
            "datatype": "int",
            "identifier": "number",
            "value": {
                "kind": "integerLiteral",
                "value": 5
            },
            "constant": "False"
        },
        {
            "kind": "callExpression",
            "arguments": [
                {
                    "kind": "callExpression",
                    "arguments": [
                        {
                            "kind": "identifier",
                            "symbol": "number"
                        }
                    ],
                    "caller": {
                        "kind": "identifier",
                        "symbol": "checkPrime"
                    }
                }
            ],
            "caller": {
                "kind": "identifier",
                "symbol": "out"
            }
        }
    ]
}