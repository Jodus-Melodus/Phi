{
    "kind": "program",
    "body": [
        {
            "kind": "variableDeclarationExpression",
            "datatype": "lambda",
            "identifier": "x",
            "value": {
                "kind": "functionDeclaration",
                "name": "~",
                "parameters": [
                    {
                        "kind": "identifier",
                        "symbol": "a"
                    },
                    {
                        "kind": "identifier",
                        "symbol": "b"
                    }
                ],
                "body": [
                    {
                        "kind": "returnExpression",
                        "value": {
                            "kind": "binaryExpression",
                            "left": {
                                "kind": "identifier",
                                "symbol": "a"
                            },
                            "operand": "+",
                            "right": {
                                "kind": "identifier",
                                "symbol": "b"
                            }
                        }
                    }
                ]
            },
            "constant": "False"
        },
        {
            "kind": "callExpression",
            "arguments": [
                {
                    "kind": "callExpression",
                    "arguments": [
                        {
                            "kind": "integerLiteral",
                            "value": 4
                        },
                        {
                            "kind": "integerLiteral",
                            "value": 3
                        }
                    ],
                    "caller": {
                        "kind": "identifier",
                        "symbol": "x"
                    }
                }
            ],
            "caller": {
                "kind": "identifier",
                "symbol": "out"
            }
        }
    ]
}